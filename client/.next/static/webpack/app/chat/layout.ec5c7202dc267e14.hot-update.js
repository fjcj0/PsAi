"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/chat/layout",{

/***/ "(app-pages-browser)/./store/messageStore.ts":
/*!*******************************!*\
  !*** ./store/messageStore.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMessageStore: () => (/* binding */ useMessageStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _utils_socket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/socket */ \"(app-pages-browser)/./utils/socket.ts\");\n\n\n\naxios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].defaults.withCredentials = true;\nconst API_URL = \"/api/message\";\nconst useMessageStore = (0,zustand__WEBPACK_IMPORTED_MODULE_2__.create)((set)=>({\n        conversationsUser: [],\n        messagesInConversation: [],\n        isLoadingMessages: false,\n        isLoadingAi: false,\n        isLoadingConversations: false,\n        getConversations: async (userId)=>{\n            set({\n                isLoadingConversations: true\n            });\n            try {\n                var _res_data;\n                const res = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"\".concat(API_URL, \"/conversations?userId=\").concat(userId));\n                set({\n                    conversationsUser: ((_res_data = res.data) === null || _res_data === void 0 ? void 0 : _res_data.conversations) || []\n                });\n            } catch (error) {\n                console.error(\"Failed to fetch conversations:\", error);\n                set({\n                    conversationsUser: []\n                });\n            } finally{\n                set({\n                    isLoadingConversations: false\n                });\n            }\n        },\n        deleteConversation: async (userId, conversationId)=>{\n            set({\n                isLoadingConversations: true\n            });\n            try {\n                await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete(\"\".concat(API_URL, \"/delete-conversation/\").concat(userId, \"/\").concat(conversationId));\n                set((state)=>({\n                        conversationsUser: state.conversationsUser.filter((conv)=>conv._id !== conversationId)\n                    }));\n            } catch (error) {\n                console.error(\"Failed to delete conversation:\", error);\n            } finally{\n                set({\n                    isLoadingConversations: false\n                });\n            }\n        },\n        getMessages: async (userId, conversationId)=>{\n            set({\n                isLoadingMessages: true\n            });\n            try {\n                var _res_data;\n                const res = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"\".concat(API_URL, \"/get-messages/\").concat(userId, \"/\").concat(conversationId));\n                set({\n                    messagesInConversation: ((_res_data = res.data) === null || _res_data === void 0 ? void 0 : _res_data.messages) || []\n                });\n            } catch (error) {\n                console.error(\"Failed to fetch messages:\", error);\n                set({\n                    messagesInConversation: []\n                });\n            } finally{\n                set({\n                    isLoadingMessages: false\n                });\n            }\n        },\n        sendMessageToAi: (userId, message, conversationId)=>{\n            if (!userId || !message.trim()) return;\n            // Temporary ID for optimistic UI\n            const tempId = \"temp-\".concat(Date.now());\n            const userMessage = {\n                _id: tempId,\n                conversationId: conversationId || null,\n                userId,\n                role: \"user\",\n                content: message,\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString()\n            };\n            // Add user message optimistically\n            set((state)=>({\n                    messagesInConversation: [\n                        ...state.messagesInConversation,\n                        userMessage\n                    ],\n                    isLoadingAi: true\n                }));\n            // Remove previous listeners to avoid duplicates\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.off(\"receiveMessage\");\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.off(\"errorMessage\");\n            // Listen for backend response\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.on(\"receiveMessage\", (data)=>{\n                const { message: msg, conversation } = data;\n                // If new conversation created, update state and patch temp messages\n                if (conversation) {\n                    set((state)=>({\n                            conversationsUser: [\n                                conversation,\n                                ...state.conversationsUser\n                            ],\n                            messagesInConversation: state.messagesInConversation.map((m)=>m._id === tempId ? {\n                                    ...m,\n                                    _id: msg._id,\n                                    conversationId: conversation._id\n                                } : m)\n                        }));\n                }\n                // Only append messages from AI or messages without tempId\n                if (msg.role === \"ai\") {\n                    set((state)=>({\n                            messagesInConversation: [\n                                ...state.messagesInConversation,\n                                msg\n                            ],\n                            isLoadingAi: false\n                        }));\n                }\n            });\n            // Handle errors\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.on(\"errorMessage\", (err)=>{\n                console.error(\"AI Error:\", err);\n                set({\n                    isLoadingAi: false\n                });\n            });\n            // Send event to server\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.emit(\"sendMessageToAi\", {\n                userId,\n                message,\n                conversation: conversationId\n            });\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/messageStore.ts\n"));

/***/ })

});
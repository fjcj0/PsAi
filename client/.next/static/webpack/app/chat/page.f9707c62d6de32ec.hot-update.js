"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/chat/page",{

/***/ "(app-pages-browser)/./store/messageStore.ts":
/*!*******************************!*\
  !*** ./store/messageStore.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMessageStore: () => (/* binding */ useMessageStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _utils_socket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/socket */ \"(app-pages-browser)/./utils/socket.ts\");\n\n\n\naxios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].defaults.withCredentials = true;\nconst API_URL = \"/api/message\";\nconst useMessageStore = (0,zustand__WEBPACK_IMPORTED_MODULE_2__.create)((set)=>({\n        conversationsUser: [],\n        messagesInConversation: [],\n        isLoadingMessages: false,\n        isLoadingAi: false,\n        isLoadingConversations: false,\n        // Fetch all conversations for a user\n        getConversations: async (userId)=>{\n            set({\n                isLoadingConversations: true\n            });\n            try {\n                var _res_data;\n                const res = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"\".concat(API_URL, \"/conversations?userId=\").concat(userId));\n                set({\n                    conversationsUser: ((_res_data = res.data) === null || _res_data === void 0 ? void 0 : _res_data.conversations) || []\n                });\n            } catch (error) {\n                console.error(\"Failed to fetch conversations:\", error);\n                set({\n                    conversationsUser: []\n                });\n            } finally{\n                set({\n                    isLoadingConversations: false\n                });\n            }\n        },\n        // Delete a conversation\n        deleteConversation: async (userId, conversationId)=>{\n            set({\n                isLoadingConversations: true\n            });\n            try {\n                await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].delete(\"\".concat(API_URL, \"/delete-conversation/\").concat(userId, \"/\").concat(conversationId));\n                set((state)=>({\n                        conversationsUser: state.conversationsUser.filter((conv)=>conv._id !== conversationId)\n                    }));\n            } catch (error) {\n                console.error(\"Failed to delete conversation:\", error);\n            } finally{\n                set({\n                    isLoadingConversations: false\n                });\n            }\n        },\n        // Fetch messages for a conversation\n        getMessages: async (userId, conversationId)=>{\n            set({\n                isLoadingMessages: true\n            });\n            try {\n                var _res_data;\n                const res = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(\"\".concat(API_URL, \"/get-messages/\").concat(userId, \"/\").concat(conversationId));\n                set({\n                    messagesInConversation: ((_res_data = res.data) === null || _res_data === void 0 ? void 0 : _res_data.messages) || []\n                });\n            } catch (error) {\n                console.error(\"Failed to fetch messages:\", error);\n                set({\n                    messagesInConversation: []\n                });\n            } finally{\n                set({\n                    isLoadingMessages: false\n                });\n            }\n        },\n        // Send message to AI\n        sendMessageToAi: (userId, message, conversationId)=>{\n            if (!userId || !message.trim()) return;\n            // ---------------- Optimistic User Message ----------------\n            const userMessage = {\n                _id: \"\".concat(Date.now()),\n                conversationId: conversationId || null,\n                userId,\n                role: \"user\",\n                content: message,\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString()\n            };\n            set((state)=>({\n                    messagesInConversation: [\n                        ...state.messagesInConversation,\n                        userMessage\n                    ],\n                    isLoadingAi: true\n                }));\n            // ---------------- Socket Event Listeners ----------------\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.off(\"receiveMessage\");\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.on(\"receiveMessage\", (data)=>{\n                const { message: msg, conversation } = data;\n                // If backend created a new conversation, store it and update temp messages\n                if (conversation) {\n                    set((state)=>({\n                            conversationsUser: [\n                                conversation,\n                                ...state.conversationsUser\n                            ],\n                            messagesInConversation: state.messagesInConversation.map((m)=>!m.conversationId ? {\n                                    ...m,\n                                    conversationId: conversation._id\n                                } : m)\n                        }));\n                }\n                // Append received message (AI or user) to messages\n                set((state)=>({\n                        messagesInConversation: [\n                            ...state.messagesInConversation,\n                            msg\n                        ]\n                    }));\n                // Stop AI loading when AI message arrives\n                if (msg.role === \"ai\") set({\n                    isLoadingAi: false\n                });\n            });\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.off(\"errorMessage\");\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.on(\"errorMessage\", (err)=>{\n                console.error(\"AI Error:\", err);\n                set({\n                    isLoadingAi: false\n                });\n            });\n            // ---------------- Emit Socket Event ----------------\n            _utils_socket__WEBPACK_IMPORTED_MODULE_0__.socket.emit(\"sendMessageToAi\", {\n                userId,\n                message,\n                conversation: conversationId\n            });\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3N0b3JlL21lc3NhZ2VTdG9yZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWlDO0FBQ1A7QUFFYztBQUN4Q0MsNkNBQUtBLENBQUNFLFFBQVEsQ0FBQ0MsZUFBZSxHQUFHO0FBQ2pDLE1BQU1DLFVBQVU7QUFDVCxNQUFNQyxrQkFBa0JOLCtDQUFNQSxDQUFlLENBQUNPLE1BQVM7UUFDMURDLG1CQUFtQixFQUFFO1FBQ3JCQyx3QkFBd0IsRUFBRTtRQUMxQkMsbUJBQW1CO1FBQ25CQyxhQUFhO1FBQ2JDLHdCQUF3QjtRQUV4QixxQ0FBcUM7UUFDckNDLGtCQUFrQixPQUFPQztZQUNyQlAsSUFBSTtnQkFBRUssd0JBQXdCO1lBQUs7WUFDbkMsSUFBSTtvQkFFeUJHO2dCQUR6QixNQUFNQSxNQUFNLE1BQU1kLDZDQUFLQSxDQUFDZSxHQUFHLENBQUMsR0FBbUNGLE9BQWhDVCxTQUFRLDBCQUErQixPQUFQUztnQkFDL0RQLElBQUk7b0JBQUVDLG1CQUFtQk8sRUFBQUEsWUFBQUEsSUFBSUUsSUFBSSxjQUFSRixnQ0FBQUEsVUFBVUcsYUFBYSxLQUFJLEVBQUU7Z0JBQUM7WUFDM0QsRUFBRSxPQUFPQyxPQUFPO2dCQUNaQyxRQUFRRCxLQUFLLENBQUMsa0NBQWtDQTtnQkFDaERaLElBQUk7b0JBQUVDLG1CQUFtQixFQUFFO2dCQUFDO1lBQ2hDLFNBQVU7Z0JBQ05ELElBQUk7b0JBQUVLLHdCQUF3QjtnQkFBTTtZQUN4QztRQUNKO1FBRUEsd0JBQXdCO1FBQ3hCUyxvQkFBb0IsT0FBT1AsUUFBZ0JRO1lBQ3ZDZixJQUFJO2dCQUFFSyx3QkFBd0I7WUFBSztZQUNuQyxJQUFJO2dCQUNBLE1BQU1YLDZDQUFLQSxDQUFDc0IsTUFBTSxDQUFDLEdBQWtDVCxPQUEvQlQsU0FBUSx5QkFBaUNpQixPQUFWUixRQUFPLEtBQWtCLE9BQWZRO2dCQUMvRGYsSUFBSSxDQUFDaUIsUUFBVzt3QkFDWmhCLG1CQUFtQmdCLE1BQU1oQixpQkFBaUIs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YXJxby9Eb3dubG9hZHMvUHNDaGF0L2NsaWVudC9zdG9yZS9tZXNzYWdlU3RvcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSBcInp1c3RhbmRcIjtcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcbmltcG9ydCB7IE1lc3NhZ2VTdG9yZSB9IGZyb20gXCJAL3R5cGVcIjtcbmltcG9ydCB7IHNvY2tldCB9IGZyb20gXCJAL3V0aWxzL3NvY2tldFwiO1xuYXhpb3MuZGVmYXVsdHMud2l0aENyZWRlbnRpYWxzID0gdHJ1ZTtcbmNvbnN0IEFQSV9VUkwgPSBcIi9hcGkvbWVzc2FnZVwiO1xuZXhwb3J0IGNvbnN0IHVzZU1lc3NhZ2VTdG9yZSA9IGNyZWF0ZTxNZXNzYWdlU3RvcmU+KChzZXQpID0+ICh7XG4gICAgY29udmVyc2F0aW9uc1VzZXI6IFtdLFxuICAgIG1lc3NhZ2VzSW5Db252ZXJzYXRpb246IFtdLFxuICAgIGlzTG9hZGluZ01lc3NhZ2VzOiBmYWxzZSxcbiAgICBpc0xvYWRpbmdBaTogZmFsc2UsXG4gICAgaXNMb2FkaW5nQ29udmVyc2F0aW9uczogZmFsc2UsXG5cbiAgICAvLyBGZXRjaCBhbGwgY29udmVyc2F0aW9ucyBmb3IgYSB1c2VyXG4gICAgZ2V0Q29udmVyc2F0aW9uczogYXN5bmMgKHVzZXJJZDogc3RyaW5nKSA9PiB7XG4gICAgICAgIHNldCh7IGlzTG9hZGluZ0NvbnZlcnNhdGlvbnM6IHRydWUgfSk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5nZXQoYCR7QVBJX1VSTH0vY29udmVyc2F0aW9ucz91c2VySWQ9JHt1c2VySWR9YCk7XG4gICAgICAgICAgICBzZXQoeyBjb252ZXJzYXRpb25zVXNlcjogcmVzLmRhdGE/LmNvbnZlcnNhdGlvbnMgfHwgW10gfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIGNvbnZlcnNhdGlvbnM6XCIsIGVycm9yKTtcbiAgICAgICAgICAgIHNldCh7IGNvbnZlcnNhdGlvbnNVc2VyOiBbXSB9KTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHNldCh7IGlzTG9hZGluZ0NvbnZlcnNhdGlvbnM6IGZhbHNlIH0pO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8vIERlbGV0ZSBhIGNvbnZlcnNhdGlvblxuICAgIGRlbGV0ZUNvbnZlcnNhdGlvbjogYXN5bmMgKHVzZXJJZDogc3RyaW5nLCBjb252ZXJzYXRpb25JZDogc3RyaW5nKSA9PiB7XG4gICAgICAgIHNldCh7IGlzTG9hZGluZ0NvbnZlcnNhdGlvbnM6IHRydWUgfSk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBheGlvcy5kZWxldGUoYCR7QVBJX1VSTH0vZGVsZXRlLWNvbnZlcnNhdGlvbi8ke3VzZXJJZH0vJHtjb252ZXJzYXRpb25JZH1gKTtcbiAgICAgICAgICAgIHNldCgoc3RhdGUpID0+ICh7XG4gICAgICAgICAgICAgICAgY29udmVyc2F0aW9uc1VzZXI6IHN0YXRlLmNvbnZlcnNhdGlvbnNVc2VyLmZpbHRlcigoY29udikgPT4gY29udi5faWQgIT09IGNvbnZlcnNhdGlvbklkKSxcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZGVsZXRlIGNvbnZlcnNhdGlvbjpcIiwgZXJyb3IpO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgc2V0KHsgaXNMb2FkaW5nQ29udmVyc2F0aW9uczogZmFsc2UgfSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8gRmV0Y2ggbWVzc2FnZXMgZm9yIGEgY29udmVyc2F0aW9uXG4gICAgZ2V0TWVzc2FnZXM6IGFzeW5jICh1c2VySWQ6IHN0cmluZywgY29udmVyc2F0aW9uSWQ6IHN0cmluZykgPT4ge1xuICAgICAgICBzZXQoeyBpc0xvYWRpbmdNZXNzYWdlczogdHJ1ZSB9KTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldChgJHtBUElfVVJMfS9nZXQtbWVzc2FnZXMvJHt1c2VySWR9LyR7Y29udmVyc2F0aW9uSWR9YCk7XG4gICAgICAgICAgICBzZXQoeyBtZXNzYWdlc0luQ29udmVyc2F0aW9uOiByZXMuZGF0YT8ubWVzc2FnZXMgfHwgW10gfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIG1lc3NhZ2VzOlwiLCBlcnJvcik7XG4gICAgICAgICAgICBzZXQoeyBtZXNzYWdlc0luQ29udmVyc2F0aW9uOiBbXSB9KTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHNldCh7IGlzTG9hZGluZ01lc3NhZ2VzOiBmYWxzZSB9KTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyBTZW5kIG1lc3NhZ2UgdG8gQUlcbiAgICBzZW5kTWVzc2FnZVRvQWk6ICh1c2VySWQ6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nLCBjb252ZXJzYXRpb25JZD86IHN0cmluZykgPT4ge1xuICAgICAgICBpZiAoIXVzZXJJZCB8fCAhbWVzc2FnZS50cmltKCkpIHJldHVybjtcblxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tIE9wdGltaXN0aWMgVXNlciBNZXNzYWdlIC0tLS0tLS0tLS0tLS0tLS1cbiAgICAgICAgY29uc3QgdXNlck1lc3NhZ2U6IE1lc3NhZ2VUeXBlID0ge1xuICAgICAgICAgICAgX2lkOiBgJHtEYXRlLm5vdygpfWAsIC8vIHRlbXBvcmFyeSBJRFxuICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkIHx8IG51bGwsXG4gICAgICAgICAgICB1c2VySWQsXG4gICAgICAgICAgICByb2xlOiBcInVzZXJcIixcbiAgICAgICAgICAgIGNvbnRlbnQ6IG1lc3NhZ2UsXG4gICAgICAgICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICB9O1xuXG4gICAgICAgIHNldCgoc3RhdGUpID0+ICh7XG4gICAgICAgICAgICBtZXNzYWdlc0luQ29udmVyc2F0aW9uOiBbLi4uc3RhdGUubWVzc2FnZXNJbkNvbnZlcnNhdGlvbiwgdXNlck1lc3NhZ2VdLFxuICAgICAgICAgICAgaXNMb2FkaW5nQWk6IHRydWUsXG4gICAgICAgIH0pKTtcblxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tIFNvY2tldCBFdmVudCBMaXN0ZW5lcnMgLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICBzb2NrZXQub2ZmKFwicmVjZWl2ZU1lc3NhZ2VcIik7XG4gICAgICAgIHNvY2tldC5vbihcInJlY2VpdmVNZXNzYWdlXCIsIChkYXRhKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IG1lc3NhZ2U6IG1zZywgY29udmVyc2F0aW9uIH0gPSBkYXRhO1xuXG4gICAgICAgICAgICAvLyBJZiBiYWNrZW5kIGNyZWF0ZWQgYSBuZXcgY29udmVyc2F0aW9uLCBzdG9yZSBpdCBhbmQgdXBkYXRlIHRlbXAgbWVzc2FnZXNcbiAgICAgICAgICAgIGlmIChjb252ZXJzYXRpb24pIHtcbiAgICAgICAgICAgICAgICBzZXQoKHN0YXRlKSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25zVXNlcjogW2NvbnZlcnNhdGlvbiwgLi4uc3RhdGUuY29udmVyc2F0aW9uc1VzZXJdLFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlc0luQ29udmVyc2F0aW9uOiBzdGF0ZS5tZXNzYWdlc0luQ29udmVyc2F0aW9uLm1hcCgobSkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICFtLmNvbnZlcnNhdGlvbklkID8geyAuLi5tLCBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uLl9pZCB9IDogbVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQXBwZW5kIHJlY2VpdmVkIG1lc3NhZ2UgKEFJIG9yIHVzZXIpIHRvIG1lc3NhZ2VzXG4gICAgICAgICAgICBzZXQoKHN0YXRlKSA9PiAoe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2VzSW5Db252ZXJzYXRpb246IFsuLi5zdGF0ZS5tZXNzYWdlc0luQ29udmVyc2F0aW9uLCBtc2ddLFxuICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAvLyBTdG9wIEFJIGxvYWRpbmcgd2hlbiBBSSBtZXNzYWdlIGFycml2ZXNcbiAgICAgICAgICAgIGlmIChtc2cucm9sZSA9PT0gXCJhaVwiKSBzZXQoeyBpc0xvYWRpbmdBaTogZmFsc2UgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHNvY2tldC5vZmYoXCJlcnJvck1lc3NhZ2VcIik7XG4gICAgICAgIHNvY2tldC5vbihcImVycm9yTWVzc2FnZVwiLCAoZXJyKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQUkgRXJyb3I6XCIsIGVycik7XG4gICAgICAgICAgICBzZXQoeyBpc0xvYWRpbmdBaTogZmFsc2UgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0gRW1pdCBTb2NrZXQgRXZlbnQgLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICBzb2NrZXQuZW1pdChcInNlbmRNZXNzYWdlVG9BaVwiLCB7XG4gICAgICAgICAgICB1c2VySWQsXG4gICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgY29udmVyc2F0aW9uOiBjb252ZXJzYXRpb25JZCwgLy8gdW5kZWZpbmVkIGZvciBuZXcgY29udmVyc2F0aW9uXG4gICAgICAgIH0pO1xuICAgIH0sXG59KSk7Il0sIm5hbWVzIjpbImNyZWF0ZSIsImF4aW9zIiwic29ja2V0IiwiZGVmYXVsdHMiLCJ3aXRoQ3JlZGVudGlhbHMiLCJBUElfVVJMIiwidXNlTWVzc2FnZVN0b3JlIiwic2V0IiwiY29udmVyc2F0aW9uc1VzZXIiLCJtZXNzYWdlc0luQ29udmVyc2F0aW9uIiwiaXNMb2FkaW5nTWVzc2FnZXMiLCJpc0xvYWRpbmdBaSIsImlzTG9hZGluZ0NvbnZlcnNhdGlvbnMiLCJnZXRDb252ZXJzYXRpb25zIiwidXNlcklkIiwicmVzIiwiZ2V0IiwiZGF0YSIsImNvbnZlcnNhdGlvbnMiLCJlcnJvciIsImNvbnNvbGUiLCJkZWxldGVDb252ZXJzYXRpb24iLCJjb252ZXJzYXRpb25JZCIsImRlbGV0ZSIsInN0YXRlIiwiZmlsdGVyIiwiY29udiIsIl9pZCIsImdldE1lc3NhZ2VzIiwibWVzc2FnZXMiLCJzZW5kTWVzc2FnZVRvQWkiLCJtZXNzYWdlIiwidHJpbSIsInVzZXJNZXNzYWdlIiwiRGF0ZSIsIm5vdyIsInJvbGUiLCJjb250ZW50IiwiY3JlYXRlZEF0IiwidG9JU09TdHJpbmciLCJ1cGRhdGVkQXQiLCJvZmYiLCJvbiIsIm1zZyIsImNvbnZlcnNhdGlvbiIsIm1hcCIsIm0iLCJlcnIiLCJlbWl0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/messageStore.ts\n"));

/***/ })

});